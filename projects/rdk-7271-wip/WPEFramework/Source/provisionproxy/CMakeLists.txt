project(provisionproxy)

include(setup_target_properties_library)
include(show_target_properties)

message("Setting up provisionproxy")

set(WPEFRAMEWORK_PROVISIONPROXY_DEFINITIONS
    CACHE INTERNAL "${PROJECT_NAME}: Definitions" FORCE)

set(WPEFRAMEWORK_PROVISIONPROXY_INCLUDE
    CACHE INTERNAL "${PROJECT_NAME}: Include Directories" FORCE)

set(WPEFRAMEWORK_PROVISIONPROXY_LIBS
    ${CMAKE_THREAD_LIBS_INIT}
    ${CMAKE_DL_LIBS}
    WPEFrameworkCore
    WPEFrameworkTracing)

file(GLOB WPEFRAMEWORK_PROVISIONPROXY_INCLUDES *.h)
file(GLOB WPEFRAMEWORK_PROVISIONPROXY_SOURCES *.cpp)

if(INSTALL_HEADERS_TO_TARGET)
    install(FILES ${WPEFRAMEWORK_PROVISIONPROXY_INCLUDES} DESTINATION ${CMAKE_INSTALL_PREFIX}/include/provision)
else()
    foreach(path ${CMAKE_FIND_ROOT_PATH})
        file(COPY ${WPEFRAMEWORK_PROVISIONPROXY_INCLUDES} DESTINATION ${path}/usr/include/provision)
    endforeach()
endif()

set(WPEFRAMEWORK_PROVISIONPROXY_INPUT
    ${WPEFRAMEWORK_PROVISIONPROXY_SOURCES}
    ${WPEFRAMEWORK_PROVISIONPROXY_INCLUDES}
    CACHE INTERNAL "${PROJECT_NAME}: Source files" FORCE)

set(PROVISIONPROXY_VERSION_MAJOR 0)
set(PROVISIONPROXY_VERSION_MINOR 1)
set(PROVISIONPROXY_VERSION "${PROVISIONPROXY_VERSION_MAJOR}.${PROVISIONPROXY_VERSION_MINOR}")

find_package(PkgConfig)
pkg_check_modules(PC_PROVISION REQUIRED provision)

configure_file(
  "${CMAKE_CURRENT_SOURCE_DIR}/provisionproxy.pc.in"
  "${CMAKE_BINARY_DIR}/provisionproxy.pc"
  @ONLY)

include_directories(${WPEFRAMEWORK_PROVISIONPROXY_INCLUDE})
include_directories(../include)

add_library(${PROJECT_NAME} STATIC ${WPEFRAMEWORK_PROVISIONPROXY_SOURCES})
target_link_libraries(${PROJECT_NAME} ${WPEFRAMEWORK_PROVISIONPROXY_LIBS})
set_target_properties(${PROJECT_NAME} PROPERTIES DEFINE_SYMBOL PROVISIONPROXY)

install(TARGETS ${PROJECT_NAME} ARCHIVE DESTINATION "${CMAKE_INSTALL_PREFIX}/lib")
install(FILES ${CMAKE_BINARY_DIR}/provisionproxy.pc DESTINATION "${CMAKE_INSTALL_PREFIX}/lib/pkgconfig")
