From 32a461a7fcf5718cd7da372c616810d39db50845 Mon Sep 17 00:00:00 2001
From: HaseenaSainul <h.sainul@metrological.com>
Date: Tue, 8 Jan 2019 03:42:21 +0530
Subject: [PATCH 09/10] [Netflix5] ESN read from Provisioning support added

---
 partner/dpi/gstreamer/DeviceLibNative.cpp | 60 ++++++-----------------
 1 file changed, 16 insertions(+), 44 deletions(-)

diff --git a/partner/dpi/gstreamer/DeviceLibNative.cpp b/partner/dpi/gstreamer/DeviceLibNative.cpp
index 6a22f6ad..174eeed9 100644
--- a/partner/dpi/gstreamer/DeviceLibNative.cpp
+++ b/partner/dpi/gstreamer/DeviceLibNative.cpp
@@ -159,53 +159,25 @@ bool DeviceLibNative::init()
 #ifndef USE_X509_PROVISIONING
     if (sConfiguration->idFile.empty())
     {
-#ifndef USE_COMCAST_VERSION //COMCAST_PROVISIONING
-        unsigned char boundKeyMsg_bin[] = {
-         0x00, 0x00, 0x00, 0xbe, 0x00, 0x00, 0x00, 0x2a, 0x4e, 0x4f, 0x53, 0x5a,
-         0x44, 0x34, 0x59, 0x46, 0x42, 0x3d, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
-         0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
-         0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
-         0x30, 0x31, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
-         0x00, 0x10, 0xf1, 0xee, 0x2c, 0xa1, 0xf2, 0x85, 0xae, 0xf5, 0xbf, 0x30,
-         0x65, 0xae, 0x43, 0x4f, 0x76, 0xb7, 0x00, 0x00, 0x00, 0x20, 0xc5, 0x77,
-         0xa7, 0x1c, 0x3d, 0x81, 0x8f, 0xf1, 0xd7, 0x0b, 0x31, 0xf7, 0xa6, 0x8b,
-         0xff, 0x7a, 0xe7, 0x59, 0x7f, 0xf6, 0x17, 0x0b, 0x49, 0x6c, 0x15, 0xea,
-         0x02, 0x28, 0x6d, 0x87, 0x04, 0x33, 0x00, 0x00, 0x00, 0x4c, 0x00, 0x00,
-         0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0xf9, 0x75, 0xcd, 0xf9, 0x43, 0x9c,
-         0x74, 0xff, 0x74, 0x86, 0x26, 0x6f, 0x06, 0x5f, 0x9b, 0x85, 0x00, 0x00,
-         0x00, 0x30, 0x99, 0xdc, 0xdc, 0xac, 0x18, 0x56, 0x9c, 0xba, 0x6b, 0x2d,
-         0xb8, 0xdb, 0x72, 0x82, 0x5e, 0xab, 0x14, 0x25, 0xf4, 0x6f, 0x15, 0xd0,
-         0xa0, 0x80, 0x11, 0x8f, 0x0b, 0x0c, 0x8d, 0xf5, 0xdb, 0x7b, 0xbf, 0x34,
-         0x3a, 0xad, 0x77, 0x6c, 0xe6, 0x1a, 0x53, 0xc3, 0xaf, 0x32, 0x29, 0x57,
-         0x40, 0x71, 0x00, 0x00, 0x00, 0x20, 0x7c, 0x4e, 0x5d, 0x7d, 0x17, 0x3c,
-         0x5d, 0x40, 0x62, 0xaf, 0x3b, 0x52, 0x45, 0xcd, 0x69, 0x11, 0x4c, 0xd1,
-         0x81, 0x8a, 0x7d, 0x2e, 0x2e, 0xd1, 0xf9, 0xc8, 0xe4, 0x63, 0xdd, 0x0e,
-         0x9d, 0xa1
-       };
-       unsigned int boundKeyMsg_bin_len = 230;
-       // Append msg from buffer.
-       boundKeyMsg.append(boundKeyMsg_bin, boundKeyMsg_bin_len);
-#else
 #ifndef USE_PROVISIONING
-        Log::fatal(TRACE_DPI, "No Bound Key message specified. Exiting.");
-        Log::warn(TRACE_DPI, "You can generate the \"Bound Key Message\" by running the provisioning application \"provisionNetflixKeys\"");
-        Log::fatal(TRACE_DPI, "Exiting the app");
-        return false;
+      Log::fatal(TRACE_DPI, "No Bound Key message specified. Exiting.");
+      Log::warn(TRACE_DPI, "You can generate the \"Bound Key Message\" by running the provisioning application \"provisionNetflixKeys\"");
+      Log::fatal(TRACE_DPI, "Exiting the app");
+      return false;
 #else
-        // Get manufacturer secure store from back office.
-        const unsigned short bufferSize = 8192; // 8 kb
-        char netflixId[bufferSize];
-
-        int netflixIdResult = GetDRMId("netflix", bufferSize, netflixId);
-        if (netflixIdResult < 0) {
-          // Getting secure store failed, print error message and exit.
-          fprintf(stderr, "Something went wrong when getting netflix provision id: %d\n", netflixIdResult);
-          return false;
-        }
+      // Get manufacturer secure store from back office.
+      const unsigned short bufferSize = 8192; // 8 kb
+      char netflixId[bufferSize];
+
+      int netflixIdResult = GetDRMId("netflix", bufferSize, netflixId);
+      if (netflixIdResult < 0) {
+        // Getting secure store failed, print error message and exit.
+        fprintf(stderr, "Something went wrong when getting netflix provision id: %d\n", netflixIdResult);
+        return false;
+      }
 
-        // Store retrieved in data buffer.
-        fileContent = DataBuffer::fromRawData(netflixId, netflixIdResult);
-#endif
+      // Store retrieved in data buffer.
+      boundKeyMsg.append(netflixId, netflixIdResult);
 #endif
     }
     else
-- 
2.17.1

