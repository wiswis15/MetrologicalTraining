# - Try to find WPEFrameworkPlugins
# Once done this will define
#  WPEFRAMEWORKPLUGINS_FOUND - System has WPEFrameworkPlugins
#  WPEFRAMEWORKPLUGINS_INCLUDE_DIRS - The WPEFrameworkPlugins include directories
#  WPEFRAMEWORKPLUGINS_LIBRARIES - The libraries needed to use WPEFrameworkPlugins
#
# Be extremely careful! WPEFRAMEWORK_PLUGINS_INCLUDE_DIRS and WPEFRAMEWORKPLUGINS_LIBRARIES is already defined in
# WPEFramework/Source/plugins!!
# So here we purposely left one underscore away

find_package(PkgConfig)
pkg_check_modules(PC_WPEFRAMEWORKPLUGINS WPEFrameworkPlugins)

if(PC_WPEFRAMEWORKPLUGINS_FOUND)
    if(WPEFRAMEWORKPLUGINS_FIND_VERSION AND PC_WPEFRAMEWORKPLUGINS_VERSION)
        if ("${WPEFRAMEWORKPLUGINS_FIND_VERSION}" VERSION_GREATER "${PC_WPEFRAMEWORKPLUGINS_VERSION}")
            message(WARNING "Incorrect version, found ${PC_WPEFRAMEWORKPLUGINS_VERSION}, need at least ${WPEFRAMEWORK_FIND_VERSION}, please install correct version ${WPEFRAMEWORKPLUGINS_FIND_VERSION}")
            set(WPEFRAMEWORKPLUGINS_FOUND_TEXT "Found incorrect version")
            unset(PC_WPEFRAMEWORKPLUGINS_FOUND)
        endif()
    endif()
else()
    set(WPEFRAMEWORKPLUGINS_FOUND_TEXT "Not found")
endif()

if(PC_WPEFRAMEWORKPLUGINS_FOUND)
    find_path(
        WPEFRAMEWORKPLUGINS_INCLUDE_DIRS
        NAMES plugins/plugins.h
        HINTS ${PC_WPEFRAMEWORKPLUGINS_INCLUDEDIR} ${PC_WPEFRAMEWORKPLUGINS_INCLUDE_DIRS})

    find_library(
        WPEFRAMEWORKPLUGINS_LIBRARY
        NAMES WPEFrameworkPlugins
        HINTS ${PC_WPEFRAMEWORKPLUGINS_LIBDIR} ${PC_WPEFRAMEWORKPLUGINS_LIBRARY_DIRS})


    if("${WPEFRAMEWORKPLUGINS_INCLUDE_DIRS}" STREQUAL "" OR "${WPEFRAMEWORKPLUGINS_LIBRARY}" STREQUAL "")
        set(WPEFRAMEWORKPLUGINS_FOUND_TEXT "Not found")
    else()
        set(WPEFRAMEWORKPLUGINS_FOUND_TEXT "Found")
    endif()
else()
    set(WPEFRAMEWORKPLUGINS_FOUND_TEXT "Not found")
endif()

if (WPEFRAMEWORK_VERBOSE_BUILD)
    message(STATUS "WPEFrameworkPlugins: ${WPEFRAMEWORKPLUGINS_FOUND_TEXT}")
    message(STATUS "  version      : ${PC_WPEFRAMEWORKPLUGINS_VERSION}")
    message(STATUS "  cflags       : ${PC_WPEFRAMEWORKPLUGINS_CFLAGS}")
    message(STATUS "  cflags other : ${PC_WPEFRAMEWORKPLUGINS_CFLAGS_OTHER}")
    message(STATUS "  include dirs : ${PC_WPEFRAMEWORKPLUGINS_INCLUDE_DIRS} ${PC_WPEFRAMEWORKPLUGINS_INCLUDEDIR}")
    message(STATUS "  lib dirs     : ${PC_WPEFRAMEWORKPLUGINS_LIBRARY_DIRS} ${PC_WPEFRAMEWORKPLUGINS_LIBDIR}")
    message(STATUS "  include dirs : ${WPEFRAMEWORKPLUGINS_INCLUDE_DIRS}")
    message(STATUS "  libs         : ${WPEFRAMEWORKPLUGINS_LIBRARY}")
endif()

set(WPEFRAMEWORKPLUGINS_DEFINITIONS ${PC_WPEFRAMEWORKPLUGINS_PLUGINS_CFLAGS_OTHER})
set(WPEFRAMEWORKPLUGINS_INCLUDE_DIR ${WPEFRAMEWORKPLUGINS_INCLUDE_DIRS})
set(WPEFRAMEWORKPLUGINS_LIBRARIES ${WPEFRAMEWORKPLUGINS_LIBRARY})
set(WPEFRAMEWORKPLUGINS_LIBRARY_DIRS ${PC_WPEFRAMEWORKPLUGINS_LIBRARY_DIRS})

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(WPEFRAMEWORKPLUGINS DEFAULT_MSG
    WPEFRAMEWORKPLUGINS_LIBRARIES  WPEFRAMEWORKPLUGINS_INCLUDE_DIRS)

if(WPEFRAMEWORKPLUGINS_FOUND)
else()
    message(WARNING "Could not find WPEFrameworkPlugins")
endif()

mark_as_advanced(WPEFRAMEWORKPLUGINS_DEFINITIONS WPEFRAMEWORKPLUGINS_INCLUDE_DIRS WPEFRAMEWORKPLUGINS_LIBRARIES)
